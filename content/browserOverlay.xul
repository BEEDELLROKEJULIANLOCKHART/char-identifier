<?xml version="1.0"?>
<!-- vim: set shiftwidth=4 tabstop=4 autoindent noexpandtab: -->
<!-- ***** BEGIN LICENSE BLOCK *****
   - Version: MPL 1.1/GPL 2.0/LGPL 2.1
   -
   - The contents of this file are subject to the Mozilla Public License Version
   - 1.1 (the "License"); you may not use this file except in compliance with
   - the License. You may obtain a copy of the License at
   - http://www.mozilla.org/MPL/
   -
   - Software distributed under the License is distributed on an "AS IS" basis,
   - WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
   - for the specific language governing rights and limitations under the
   - License.
   -
   - The Original Code is the character identifier extension.
   -
   - The Initial Developer of the Original Code is the Mozilla Foundation.
   - Portions created by the Initial Developer are Copyright (C) 2006
   - the Initial Developer. All Rights Reserved.
   -
   - Contributor(s):
   -   L. David Baron <dbaron@dbaron.org>, Mozilla Corporation (original author)
   -
   - Alternatively, the contents of this file may be used under the terms of
   - either the GNU General Public License Version 2 or later (the "GPL"), or
   - the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
   - in which case the provisions of the GPL or the LGPL are applicable instead
   - of those above. If you wish to allow use of your version of this file only
   - under the terms of either the GPL or the LGPL, and not to allow others to
   - use your version of this file under the terms of the MPL, indicate your
   - decision by deleting the provisions above and replace them with the notice
   - and other provisions required by the LGPL or the GPL. If you do not delete
   - the provisions above, a recipient may use your version of this file under
   - the terms of any one of the MPL, the GPL or the LGPL.
   -
   - ***** END LICENSE BLOCK ***** -->

<!DOCTYPE overlay SYSTEM "chrome://char-identifier/locale/launchOverlays.dtd">

<overlay id="charIdentOverlay"
         xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul">

	<script type="application/javascript"><![CDATA[

	// Scope everything to avoid names leaking.
	(function() {

		window.addEventListener("load", overlayLoad, true);

		function overlayLoad() {
			var popup = document.getElementById("contentAreaContextMenu");
			popup.addEventListener("popupshowing", menuShowing, false);
		}

		function menuShowing() {
			// XXX Do we know that this handler happens after the
			// onpopupshowing attribute?
			var cm = gContextMenu;
			var showItem = cm.isTextSelected;
			document.getElementById("charIdentLaunch").hidden = !showItem;
		}

		function launch() {
			var selection;
			if (gContextMenu.isRemote) {
				selection = gContextMenuContentData.selectionInfo.text;
			} else {
				selection = document.commandDispatcher.focusedWindow.getSelection().toString();
			}
			var ss = Components.classes["@mozilla.org/supports-string;1"].createInstance(Components.interfaces.nsISupportsString);
			ss.data = selection;
			var ww = Components.classes["@mozilla.org/embedcomp/window-watcher;1"].getService(Components.interfaces.nsIWindowWatcher);
			ww.openWindow(null, "chrome://char-identifier/content/characterDialog.xul", "", "resizable=yes", ss);
		}

		// Things we want outside this scope.
		window.charIdentLaunch = launch;
	})();

	]]></script>

	<popup id="contentAreaContextMenu">
		<menuitem id="charIdentLaunch" label="&charIdent.launch.label;" accesskey="&charIdent.launch.accesskey;"
			oncommand="charIdentLaunch()" insertbefore="context-searchselect" />
	</popup>

</overlay>
